{"version":3,"sources":["components/Progress/Progress.module.css","components/GameScreen/GameScreen.module.css","components/QuizButton/QuizButton.module.css","components/StartMenu/StartMenu.module.css","components/EndMenu/EndMenu.module.css","components/Progress/components/ProgressTab/ProgressTab.module.css","components/Button/Button.module.css","images/close.svg","images/menu.svg","components/Progress/components/ProgressTab/ProgressTab.tsx","components/Progress/Progress.tsx","components/QuizButton/QuizButton.tsx","constants/constants.ts","components/GameScreen/GameScreen.tsx","images/great-work.svg","components/Button/Button.tsx","components/StartMenu/StartMenu.tsx","components/EndMenu/EndMenu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ProgressTab","children","active","className","classNames","style","container","imageHolder","width","height","viewBox","fill","xmlns","d","stroke","textBlock","Progress","cardIndex","menuBlock","buttonsContainer","gameConfig","money","map","reward","index","buttonWrapper","rewardButtonContent","reachedLevel","currentLevel","QuizButton","correct","disabled","onClick","useState","currentButton","setCurrentButton","handleButtonClick","setTimeout","answerButton","wrong","wait","type","answer","GameScreen","onCardIndexChange","onEnd","menuActive","setMenuActive","buttonsDisabled","setButtonsDisabled","nextStep","questionBlock","questionText","cards","question","answersBlock","answers","answerLetter","letter","answerText","text","menuButton","src","close","alt","menu","Button","button","StartMenu","mainImg","greatWork","background","EndMenu","inscription","title","App","currentStage","setCurrentStage","setCardIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aba65bdf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Progress_container__3-dap\",\"menuBlock\":\"Progress_menuBlock__HiEhN\",\"buttonsContainer\":\"Progress_buttonsContainer__3Ilu1\",\"buttonWrapper\":\"Progress_buttonWrapper__3f4nN\",\"rewardButtonContent\":\"Progress_rewardButtonContent__3hWPC\",\"reachedLevel\":\"Progress_reachedLevel__QS5He\",\"currentLevel\":\"Progress_currentLevel__11-Ms\",\"active\":\"Progress_active__KT2CY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameScreen_container__1zbgq\",\"menuButton\":\"GameScreen_menuButton__ESHw-\",\"questionBlock\":\"GameScreen_questionBlock__SHMPz\",\"questionText\":\"GameScreen_questionText__2Mg4m\",\"answersBlock\":\"GameScreen_answersBlock__kawUS\",\"buttonWrapper\":\"GameScreen_buttonWrapper__1k7-C\",\"answerLetter\":\"GameScreen_answerLetter__F4B0D\",\"answerText\":\"GameScreen_answerText__1KNMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerButton\":\"QuizButton_answerButton__3eYex\",\"correct\":\"QuizButton_correct__2bNCr\",\"imageHolder\":\"QuizButton_imageHolder__3LN8Q\",\"glowingCorrectSvg\":\"QuizButton_glowingCorrectSvg__2uPHv\",\"glowingCorrectPseudo\":\"QuizButton_glowingCorrectPseudo__2XsoQ\",\"wrong\":\"QuizButton_wrong__3wFR7\",\"glowingWrongSvg\":\"QuizButton_glowingWrongSvg__QbrDu\",\"glowingWrongPseudo\":\"QuizButton_glowingWrongPseudo__3Di2n\",\"wait\":\"QuizButton_wait__3--ox\",\"answer\":\"QuizButton_answer__2qEKQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StartMenu_container__2recM\",\"mainImg\":\"StartMenu_mainImg__1ZjiN\",\"textBlock\":\"StartMenu_textBlock__JHd5j\",\"text\":\"StartMenu_text__3mGXy\",\"background\":\"StartMenu_background__24aGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EndMenu_container__1zXCh\",\"mainImg\":\"EndMenu_mainImg__2f8lc\",\"textBlock\":\"EndMenu_textBlock__2h03f\",\"title\":\"EndMenu_title__uBERZ\",\"inscription\":\"EndMenu_inscription__1BKBw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProgressTab_container__1ReNz\",\"active\":\"ProgressTab_active__1vLnH\",\"imageHolder\":\"ProgressTab_imageHolder__2KYhO\",\"textBlock\":\"ProgressTab_textBlock__Xn8M4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3bCUi\"};","export default __webpack_public_path__ + \"static/media/close.67d0a39e.svg\";","export default __webpack_public_path__ + \"static/media/menu.2e4db3a9.svg\";","import React from 'react';\nimport classNames from 'classnames';\n\nimport style from './ProgressTab.module.css';\n\nexport interface ProgressTabProps {\n  /** Content to display inside the button */\n  children: React.ReactNode;\n  /** Whether or not the tab is active */\n  active: boolean;\n}\n\nfunction ProgressTab({ children, active }: ProgressTabProps) {\n  return (\n    <div className={classNames(style.container, { [style.active]: active })}>\n      <div className={style.imageHolder}>\n        <svg\n          width=\"240\"\n          height=\"32\"\n          viewBox=\"0 0 240 32\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            // eslint-disable-next-line max-len\n            d=\"M13.5303 3.70404C15.6719 1.64809 18.5256 0.5 21.4944 0.5H218.506C221.474 0.5 224.328 1.64809 226.47 3.70404L239.278 16L226.47 28.296C224.328 30.3519 221.474 31.5 218.506 31.5H21.4944C18.5256 31.5 15.6719 30.3519 13.5303 28.296L0.721988 16L13.5303 3.70404Z\"\n            fill=\"#FFFFFF\"\n            stroke=\"#D0D0D8\"\n          />\n        </svg>\n      </div>\n      <div className={style.textBlock}>{children}</div>\n    </div>\n  );\n}\n\nexport default ProgressTab;\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport gameConfig from '../../gameConfig.json';\nimport ProgressTab from './components/ProgressTab/ProgressTab';\nimport style from './Progress.module.css';\n\nexport interface ProgressProps {\n  /** Index of current card */\n  cardIndex: number;\n  /** Whether or not the menu is active */\n  active: boolean;\n}\n\nfunction Progress({ cardIndex, active }: ProgressProps) {\n  return (\n    <div className={classNames(style.container, { [style.active]: active })}>\n      <div className={style.menuBlock}>\n        <div className={style.buttonsContainer}>\n          {gameConfig.money.map((reward, index) => (\n            <div key={reward} className={style.buttonWrapper}>\n              <ProgressTab active={cardIndex === index}>\n                <span\n                  className={classNames(\n                    style.rewardButtonContent,\n                    { [style.reachedLevel]: cardIndex > index },\n                    { [style.currentLevel]: cardIndex === index },\n                  )}\n                >\n                  $\n                  {reward}\n                </span>\n              </ProgressTab>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Progress;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\nimport { SHOW_ANSWER_DELAY } from '../../constants/constants';\nimport { buttonState } from '../../types/types';\nimport style from './QuizButton.module.css';\n\nexport interface QuizButtonProps {\n  /** Content to display inside the button */\n  children: React.ReactNode;\n  /** Whether or not the answer is correct */\n  correct: boolean;\n  /** Whether or not the button is disabled */\n  disabled: boolean;\n  /** Callback when the button is clicked */\n  onClick: () => void;\n}\n\nfunction QuizButton({\n  children, correct, disabled, onClick,\n}: QuizButtonProps) {\n  const [currentButton, setCurrentButton] = useState<buttonState>('inactive');\n\n  function showAnswer() {\n    if (correct) {\n      setCurrentButton('correct');\n      return;\n    }\n\n    setCurrentButton('wrong');\n  }\n\n  function handleButtonClick() {\n    onClick();\n    setCurrentButton('waiting');\n    setTimeout(() => {\n      showAnswer();\n    }, SHOW_ANSWER_DELAY);\n  }\n\n  return (\n    <button\n      className={classNames(style.answerButton, {\n        [style.correct]: currentButton === 'correct',\n        [style.wrong]: currentButton === 'wrong',\n        [style.wait]: currentButton === 'waiting',\n      })}\n      onClick={() => handleButtonClick()}\n      type=\"button\"\n      disabled={disabled}\n    >\n      <div className={style.imageHolder}>\n        <svg\n          width=\"320\"\n          height=\"56\"\n          viewBox=\"0 0 320 56\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            // eslint-disable-next-line max-len\n            d=\"M32.8175 5.31576C34.9762 2.29361 38.4615 0.5 42.1754 0.5H277.825C281.539 0.5 285.024 2.29361 287.183 5.31576L303.386 28L287.183 50.6842C285.024 53.7064 281.539 55.5 277.825 55.5H42.1754C38.4615 55.5 34.9762 53.7064 32.8175 50.6842L16.6145 28L32.8175 5.31576Z\"\n            fill=\"#FFFFFF\"\n            stroke=\"#D0D0D8\"\n          />\n        </svg>\n      </div>\n      <div className={style.answer}>{children}</div>\n    </button>\n  );\n}\n\nexport default QuizButton;\n","export const SHOW_ANSWER_DELAY = 1000;\nexport const NEXT_STEP_DELAY = 3000;\n","import React, { useState } from 'react';\n\nimport { NEXT_STEP_DELAY } from '../../constants/constants';\nimport gameConfig from '../../gameConfig.json';\nimport close from '../../images/close.svg';\nimport menu from '../../images/menu.svg';\nimport Progress from '../Progress/Progress';\nimport QuizButton from '../QuizButton/QuizButton';\nimport style from './GameScreen.module.css';\n\nexport interface GameScreenProps {\n  /** Index of current card */\n  cardIndex: number;\n  /** Callback when index is changed */ /* eslint-disable no-unused-vars */\n  onCardIndexChange: (index: number) => void;\n  /** Callback game is over */\n  onEnd: () => void;\n}\n\nfunction GameScreen({ cardIndex, onCardIndexChange, onEnd }: GameScreenProps) {\n  const [menuActive, setMenuActive] = useState<boolean>(false);\n  const [buttonsDisabled, setButtonsDisabled] = useState<boolean>(false);\n\n  function nextLevel() {\n    if (cardIndex > 10) {\n      onEnd();\n      return;\n    }\n\n    onCardIndexChange(cardIndex + 1);\n  }\n\n  function nextStep(answer: boolean) {\n    setButtonsDisabled(false);\n    if (answer) {\n      nextLevel();\n      return;\n    }\n\n    onEnd();\n  }\n\n  function handleButtonClick(answer: boolean) {\n    setButtonsDisabled(true);\n    setTimeout(() => {\n      nextStep(answer);\n    }, NEXT_STEP_DELAY);\n  }\n\n  return (\n    <div className={style.container}>\n      <div className={style.questionBlock}>\n        <p className={style.questionText}>\n          {gameConfig.cards[cardIndex].question}\n        </p>\n        <div className={style.answersBlock}>\n          {gameConfig.cards[cardIndex].answers.map((answer) => (\n            <div key={answer.letter} className={style.buttonWrapper}>\n              <QuizButton\n                onClick={() => handleButtonClick(answer.correct)}\n                correct={answer.correct}\n                disabled={buttonsDisabled}\n              >\n                <span className={style.answerLetter}>{answer.letter}</span>\n                <span className={style.answerText}>{answer.text}</span>\n              </QuizButton>\n            </div>\n          ))}\n        </div>\n      </div>\n      <Progress active={menuActive} cardIndex={cardIndex} />\n      <button\n        type=\"button\"\n        onClick={() => setMenuActive(!menuActive)}\n        className={style.menuButton}\n      >\n        {menuActive ? <img src={close} alt=\"closeMenu\" /> : <img src={menu} alt=\"openMenu\" />}\n      </button>\n    </div>\n  );\n}\n\nexport default GameScreen;\n","export default __webpack_public_path__ + \"static/media/great-work.2b7ca11b.svg\";","import React from 'react';\n\nimport style from './Button.module.css';\n\nexport interface ButtonProps {\n  /** Content to display inside the button */\n  children: React.ReactNode;\n  /** Callback when button is clicked */\n  onClick?: () => void;\n}\n\nexport function Button({ children, onClick }: ButtonProps) {\n  return (\n    <button className={style.button} onClick={onClick} type=\"button\">\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from 'react';\n\nimport greatWork from '../../images/great-work.svg';\nimport Button from '../Button/Button';\nimport style from './StartMenu.module.css';\n\nexport interface StartMenuProps {\n  /** Callback when the button is clicked */\n  onClick: () => void;\n}\n\nfunction StartMenu({ onClick }: StartMenuProps) {\n  return (\n    <div className={style.container}>\n      <img className={style.mainImg} src={greatWork} alt=\"greatWork\" />\n      <div className={style.textBlock}>\n        <span className={style.text}>Who wants to be a millionaire?</span>\n        <Button onClick={onClick}>\n          <span>Start</span>\n        </Button>\n      </div>\n      <div className={style.background} />\n    </div>\n  );\n}\n\nexport default StartMenu;\n","import React from 'react';\n\nimport gameConfig from '../../gameConfig.json';\nimport greatWork from '../../images/great-work.svg';\nimport Button from '../Button/Button';\nimport style from './EndMenu.module.css';\n\nexport interface EndMenuProps {\n  /** Index of current card */\n  cardIndex: number;\n  /** Callback when button is clicked */\n  onClick: () => void;\n}\n\nfunction EndMenu({ cardIndex, onClick }: EndMenuProps) {\n  return (\n    <div className={style.container}>\n      <img className={style.mainImg} src={greatWork} alt=\"greatWork\" />\n      <div className={style.textBlock}>\n        <span className={style.inscription}>Total score:</span>\n        <span className={style.title}>\n          {cardIndex > 0\n            ? `$${gameConfig.money[cardIndex - 1]} earned`\n            : '$0 earned'}\n        </span>\n        <Button onClick={onClick}>\n          <span>Try again</span>\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default EndMenu;\n","import React, { useState } from 'react';\n\nimport GameScreen from './components/GameScreen/GameScreen';\nimport StartMenu from './components/StartMenu/StartMenu';\nimport EndMenu from './components/EndMenu/EndMenu';\nimport { stage } from './types/types';\n\nfunction App() {\n  const [currentStage, setCurrentStage] = useState<stage>('start');\n  const [cardIndex, setCardIndex] = useState<number>(0);\n\n  return (\n    <main>\n      {currentStage === 'start' && (\n        <StartMenu onClick={() => setCurrentStage('game')} />\n      )}\n\n      {currentStage === 'end' && (\n        <EndMenu\n          cardIndex={cardIndex}\n          onClick={() => {\n            setCardIndex(0);\n            setCurrentStage('game');\n          }}\n        />\n      )}\n\n      {currentStage === 'game' && (\n        <GameScreen\n          cardIndex={cardIndex}\n          onCardIndexChange={setCardIndex}\n          onEnd={() => {\n            setCurrentStage('end');\n          }}\n        />\n      )}\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}